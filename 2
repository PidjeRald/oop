#include <iostream>
using namespace::std;

struct Node {
	int data;
	Node* next;
	Node* prev;
};

void initList(Node* head, int elem) {
	head->data = elem;
	head->next = head;
	head->prev = head;
}

void pushBack(Node* head, int elem) {
	Node* value = new Node;
	initList(value, elem);
	value->prev = head->prev;
	value->next = head;
	head->prev->next = value;
	head->prev = value;
}

void printList(Node* head) {
	Node* t = head;
	int i = 1;
	do {
		cout << i << "-й элемент списка: " << t->data << endl;
		t = t->next;
		i++;
	} while (t != head);
}

Node* findList(Node* head, int n) {
	for (int i = 1; i < n; i++)
		head = head->next;
	return head;
}

void popList(Node** head, Node* p) {
	if (p == *head)
		*head = (*head)->next;
	p->prev->next = p->next;
	p->next->prev = p->prev;
	p->next = NULL;
	p->prev = NULL;
	delete p;
}

int main() {
	setlocale(LC_ALL, "RU");
	cout << "Введите количество элементов в списке: ";
	int N;
	cin >> N;
	while (N <= 0) {
		cout << "Количество элементов должно быть больше нуля: ";
		cin >> N;
	}
	cout << "Введите 1-й элемент списка: ";
	int x;
	cin >> x;
	Node* l = new Node;
	initList(l, x);
	for (int i = 1; i < N; i++) {
		cout << "Введите " << i + 1 << "-й элемент списка: ";
		cin >> x;
		pushBack(l, x);
	}
	int count = 0;
	do {
		count++;
		cout << "Введите номер элемента, который нужно удалить: ";
		cin >> x;
		popList(&l, findList(l, x));
		if (count < N)
			printList(l);
	} while (count < N);
	cout << "Список пуст" << endl;
	return 0;
}
