Татьяна! в лес; медведь за нею;
Снег?? рыхлый по! колено ей;
То. длинный, сук ее за шею
Зацепит вдруг, то из ушей
Златые! серьги вырвет силой;

#include <iostream>
#include <fstream>
#include <string>
#include <Windows.h>
using namespace::std;
using TElem = char;

struct Queue {
	TElem data;
	Queue* next;
};

void initQueue(Queue*& head, Queue*& tail) {
	head = NULL;
	tail = NULL;
}

void pushQueue(Queue*& tail, TElem elem) {
	Queue* t = new Queue;
	t->data = elem;
	t->next = tail;
	tail = t;
}

void firstNode(Queue*& tail, Queue*& head, TElem elem) {
	Queue* t = new Queue;
	t->data = elem;
	tail = t;
	head = t;
}

TElem popQueue(Queue*& tail, Queue*& head) {
	TElem x = head->data;
	if (head == tail) {
		delete head;
		initQueue(head, tail);
	}
	else {
		Queue* t = tail;
		while (t->next != head)
			t = t->next;
		head = t;
		t = t->next;
		head->next = NULL;
		delete t;
	}
	return x;
}

void stringToQueue(Queue*& tail, Queue*& head, string str) {
	string t{};
	firstNode(tail, head, str[0]);
	for (int i = 1; i < str.length(); i++) {
		if (str[i] != ',' && str[i] != '.' && str[i] != '!' && str[i] != '?' && str[i] != ';')
			pushQueue(tail, str[i]);
		else
			t += str[i];
	}
	for (int i = 0; i < t.length(); i++)
		pushQueue(tail, t[i]);
}

void queueToFile(Queue*& tail, Queue*& head, ofstream& B) {
	while (tail) {
		B << popQueue(tail, head);
	}
	B << "\n";
}

int main() {
	setlocale(LC_ALL, "ru");
	ifstream A;
	A.open("A.txt");
	ofstream B;
	B.open("B.txt");
	string str;
	if ( !( A.is_open() && B.is_open() ) ) {
		cout << "Error!";
		return 0;
	}
	Queue* head = NULL;
	Queue* tail = NULL;
	while (!A.eof()) {
		getline(A, str);
		stringToQueue(tail, head, str);
		queueToFile(tail, head, B);
	}
	A.close();
	B.close();
	return 0;
}
